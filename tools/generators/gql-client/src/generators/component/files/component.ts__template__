import { Component, EventEmitter, Output } from "@angular/core";
import { map } from "rxjs";
import { ApolloAngularSDK } from "@blockchain_client/graph-ql-client";
import { ModelViewerComponent } from "../components";
import { <%= className %>LoaderType } from "./type";
@Component({
  selector: 'ldr-<%= fileName %>',
  templateUrl: '../components.html',
  styleUrls: ['../components.scss']
})
export class <%= className %>LoaderComponent extends ModelViewerComponent<<%= className %>LoaderType> {
  @Output()
  public override change: EventEmitter<null | <%= className %>LoaderType> = new EventEmitter<null | <%= className %>LoaderType>();
  constructor(
    private gql: ApolloAngularSDK
  ) {
    const query$ = gql.<%= propertyName %>Get().pipe(
     map(response => response.data?.<%= propertyName %>)
    );
    const listener$ = gql.<%= propertyName %>Listen().pipe(
      map(response => response.data?.<%= propertyName %>)
    );
    super(query$, listener$);
  }
}
